# ============================================================================
# Benchmark Configuration
# ============================================================================
# Copy this file to .env and customize for your benchmark runs
#
# Usage: cp .env.example .env
#        Edit .env with your desired test configuration
#
# Note: All test lists are space-separated strings


# ============================================================================
# MOCHA TESTS (JavaScript Client Tests)
# ============================================================================

# Option 1: Run specific test files (just filenames, not paths)
# Quick verification (fast, ~5-30 seconds per run):
MOCHA_TESTS_CONFIG="db-auth"

# Option 2: Multiple test files (space-separated)
# Document and WOQL operations (moderate, ~1-3 minutes per run):
#MOCHA_TESTS_CONFIG="db-auth document woql"

# Option 3: Comprehensive suite (longer, ~5-15 minutes per run):
#MOCHA_TESTS_CONFIG="db-auth document woql json api schema"

# Option 4: Auto-discover ALL Mocha tests (longest, ~30+ minutes per run)
# WARNING: This runs every .js file in tests/test/ - use sparingly!
#MOCHA_TESTS_CONFIG="auto"

# Common individual test files (pick and choose):
# - db-auth: Authentication and authorization
# - document: Document CRUD operations
# - woql: WOQL query builder
# - json: JSON handling
# - api: API client operations
# - schema: Schema operations
# - diff: Diff/patch operations
# - branch: Branch operations
# - commit: Commit operations


# ============================================================================
# PL-UNIT TESTS (Prolog Core Tests)
# ============================================================================

# Option 1: Single focused suite (fast, ~5-10 seconds per run)
# Type conversion with decimals/rationals:
PLUNIT_TESTS_CONFIG="typecast"

# Option 2: Numeric and data operations (moderate, ~30-60 seconds per run)
# Focus on decimal precision, JSON, and arithmetic:
#PLUNIT_TESTS_CONFIG="typecast json json_read_term json_datatype arithmetic_document"

# Option 3: Core operations suite (moderate-long, ~2-5 minutes per run)
#PLUNIT_TESTS_CONFIG="typecast json terminus_store document employee_documents"

# Option 4: Auto-discover ALL PL-Unit tests (longest, ~10-30 minutes per run)
# WARNING: Discovers and runs all loaded test suites - very comprehensive!
#PLUNIT_TESTS_CONFIG="auto"

# Common individual test suites (pick and choose):
# - typecast: Type conversion (decimals, rationals, strings)
# - json: JSON serialization with rational numbers
# - json_read_term: JSON term parsing (rational preservation)
# - json_datatype: JSON datatype handling
# - arithmetic_document: Document arithmetic operations
# - terminus_store: Core storage operations (baseline performance)
# - document: Document CRUD and validation
# - employee_documents: Complex document operations


# ============================================================================
# EXAMPLE CONFIGURATIONS
# ============================================================================

# Quick smoke test (fastest, ~30 seconds per run):
#MOCHA_TESTS_CONFIG="db-auth"
#PLUNIT_TESTS_CONFIG="typecast"

# Numeric precision focus (fast, ~1-2 minutes per run):
#MOCHA_TESTS_CONFIG="document woql"
#PLUNIT_TESTS_CONFIG="typecast json arithmetic_document"

# Full performance benchmark (long, ~15-45 minutes per run):
#MOCHA_TESTS_CONFIG="auto"
#PLUNIT_TESTS_CONFIG="auto"

# Document operations focus (moderate, ~3-7 minutes per run):
#MOCHA_TESTS_CONFIG="document api schema"
#PLUNIT_TESTS_CONFIG="document employee_documents arithmetic_document"


# ============================================================================
# NOTES
# ============================================================================
# 
# - Test lists are space-separated (not comma-separated)
# - "auto" discovers all available tests in that category
# - Mocha tests are in: tests/test/*.js
# - PL-Unit tests are discovered from src/interactive.pl
# - More tests = longer benchmark runtime
# - Start with quick tests, expand as needed
# - Not all tests may exist in both branches being compared
